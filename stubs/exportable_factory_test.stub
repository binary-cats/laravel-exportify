<?php

namespace {{ namespace }};

use {{ factoryNamespace }}\{{ factoryClass }};
use BinaryCats\Exportify\Contracts\Exportable;
use Tests\TestCase;

class {{ class }} extends TestCase
{
    public function it_will_implement_export_factory_interface(): void
    {
        $factory = new {{ factoryClass }}();

        $this->assertInstanceOf(\BinaryCats\Exportify\Contracts\ExportFactory::class, $factory);
    }

    public function it_will_create_exportable(): void
    {
        $factory = new {{ factoryClass }}();

        $exportable = $factory->exportable();

        $this->assertInstanceOf(Exportable::class, $exportable);
    }

    public function it_will_have_defaults(): void
    {
        $factory = new {{ factoryClass }}();

        $this->assertIsArray($factory->defaults());
    }

    public function it_will_have_livewire_component(): void
    {
        $factory = new {{ factoryClass }}();

        $this->assertIsString($factory->livewire());
        $this->assertTrue(class_exists($factory->livewire()));
    }
} 