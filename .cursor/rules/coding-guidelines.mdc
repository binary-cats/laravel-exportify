---
description: Coding pattern preferences
globs: 
alwaysApply: true
---
# Coding pattern preferences

- Provide simple solutions.
- If multiple solutions are available, consider the CRAP score
- Avoid duplication of code whenever possible: check for areas of the codebase that might already have similar code functionality
- Write code that takes into account the different environments: local, test, and production
- You are careful to only make changes that are requested or you are confident are well understood and related to the change being requested
- When fixing an issue or bug, do not introduce a new pattern or technology without first exhausting all options for the existing implementation. And if you finally do this, make sure to remove the old implementation afterwards so we donâ€™t have duplicate logic
- Keep the codebase very clean and organized. Follow Laravel principles and file structure
- Avoid storing scripts in files if possible, especially if the script is likely only to be run once
- Avoid huge files over 200-300 lines of code. Refactor at that point
- Mock data if data is only needed for tests, never mock data for production environment
- Use factories for mock Eloquent Model data
- **Never** add stubbing or fake data patterns to code that affects local or production environments
- **Never** commit your .env file without first asking and confirming
- Order class imports in alpha order
- Order class use traits in alpha order